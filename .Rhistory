artists <- c("Porter Robinson", "Madeon", "1788-L", "Joyryde", "Skrillex")
songs <- c("It's OK", "Shelter", "First Time")
plays <- c(1202398. 3209, 485930, 302389)
plays <- c(1202398, 3209, 485930, 302389)
db <- data.frame(artists, songs, plays)
db <- data.frame(artists, songs, plays, stringsAsFactors = FALSE)
plays <- c(1209, 234989, 20939)
artists <- ("Dabin", "Porter Robinson", "Seven Lions")
artists <- ("Dabin", "Porter Robinson", "Seven Lions")
artists <- c("Dabin", "Porter Robinson", "Seven Lions")
db <- data.frame(artists, songs, plays, stringsAsFactors = FALSE)
View(db)
db <- data.frame(artists, songs, plays)
db2 <- data.frame(artists, songs, plays)
View(db2)
?rownames
gci_api_key <- "AIzaSyAuzBbDMEsgbAzdAY0A-mkGCyFJ0rKnJL0"
pc_api_key <- "Jidt0aYdkgfnitXVPLOXy2C9m2O4k4tEJtc5LDGj"
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "/", address)
source("api-keys.R")
base_url <- "https://www.googleapis.com/civicinfo/v2/"
endpoint <- "/representatives"
api_key <- gci_api_key
address <- "31st Ave NE Seattle WA 98105"
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "/", address)
uri_full
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "/", address)
uri_full
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "?", address, "&", api_key)
uri_full
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "?address=", address, "&key=", api_key)
uri_full
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "&key=", api_key, "?address=", address)
uri_full
source("api-keys.R")
base_url <- "https://www.googleapis.com/civicinfo/v2/"
endpoint <- "representatives"
api_key <- gci_api_key
address <- "31st Ave NE Seattle WA"
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "&key=", api_key, "?address=", address)
source("api-keys.R")
base_url <- "https://www.googleapis.com/civicinfo/v2/"
endpoint <- "representatives"
api_key <- gci_api_key
address <- "31st Ave NE Seattle WA"
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "&key=", api_key, "?address=", address)
uri_full
source("api-keys.R")
base_url <- "https://www.googleapis.com/civicinfo/v2/"
endpoint <- "representatives"
api_key <- gci_api_key
address <- "31st Ave NE Seattle WA 98105"
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "&key=", api_key, "?address=", address)
uri_full
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "?key=", api_key, "&address=", address)
uri_full
base_url <- "https://www.googleapis.com/civicinfo/v2/"
endpoint <- "representatives"
api_key <- gci_api_key
address <- "31 Ave NE Seattle WA 98105"
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "?key=", api_key, "&address=", address)
base_url <- "https://www.googleapis.com/civicinfo/v2/"
endpoint <- "representatives"
api_key <- gci_api_key
address <- "31 Ave NE Seattle WA 98105"
uri_full
source("api-keys.R")
base_url <- "https://www.googleapis.com/civicinfo/v2/"
endpoint <- "representatives"
api_key <- gci_api_key
address <- "31 Ave. NE Seattle WA 98105"
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "?key=", api_key, "&address=", address)
uri_full
address <- "1263 Pacific Ave. Kansas city KS 66102"
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "?key=", api_key, "&address=", address)
uri_full
address <- "5514 31st Ave. NE Seattle WA 98105"
# A GitHub search for `dplyr`
uri_full <- paste0(base_url, endpoint, "?key=", api_key, "&address=", address)
uri_full
# A GitHub search for `dplyr`
url_full <- paste0(base_url, endpoint, "?key=", api_key, "&address=", address)
# Use fromJSON to parse
response_text <- content(response, "text")
response <- GET(url_full)
url_full <- paste0(base_url, endpoint, "?key=", api_key, "&address=", address)
response <- GET(url_full)
library(HTTR)
library(httr)
response <- GET(url_full)
# Use fromJSON to parse
response_text <- content(response, "text")
response_data <- fromJSON(response_text)  # extract and parse using the `jsonlite` library
library(jsonlite)
response_data <- fromJSON(response_text)  # extract and parse using the `jsonlite` library
response_data <- fromJSON(response_text)  # extract and parse using the `jsonlite` library
# Use fromJSON to parse
response_text <- content(response, "text")
response_text
response
response_text
url_full
# A GitHub search for `dplyr`
url_full <- paste0(base_url, endpoint, "?key=", api_key, "&address=", gsub(" ", "%20", address)
url_full
# A GitHub search for `dplyr`
url_full <- paste0(base_url, endpoint, "?key=", api_key, "&address=", gsub(" ", "%20", address))
url_full
response <- GET(url_full)
# Use fromJSON to parse
response_text <- content(response, "text")
response_data <- fromJSON(response_text)  # extract and parse using the `jsonlite` library
response_text
response_data
# is it a data frame already?
is.data.frame(response_data)  # FALSE
View(response_data)
my_address <- "5514 31st Ave. NE Seattle WA 98105"
query_params <- list(key = api_key, address = my_address)
url_full <- paste0(base_url, endpoint)
query_params <- list(key = api_key, address = my_address)
response <- GET(url_full, query = query_params)
response_text <- content(response, "text")
response_data <- fromJSON(response_text)
View(response_data)
# extract the (useful) data
officials <- response_data$officials
View(officials)
officials_processed <- select(officials, name, position, party, emails, phones, photoUrl)
library(dplyr)
officials_processed <- select(officials, name, position, party, emails, phones, photoUrl)
officials_processed <- select(officials, name, party, emails, phones, photoUrl)
View(officials_processed)
offices <- response_data$offices
View(offices)
offices <- response_data$
# select only official name and index
# sort by index
# add to processed
offices_processed <- select(offices, name, officialindices)
offices <- response_data$offices
offices_processed <- select(offices, name, officialindices)
offices_processed <- select(offices, name, officialIndices)
View(offices_processed)
shiny::runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
is.list(colnames(midwest))
is.vector(colnames(midwest))
midwest[, !names(midwest) %in% c("PID", "county", "inmetro", "category")]
colnames(midwest[, !names(midwest) %in% c("PID", "county", "inmetro", "category")])
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
midwest[[popdensity]]
midwest[["popdensity"]]
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
midwest[[, popdensity]]
midwest[["area"]]
shiny::runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('Sophomore-Year-UW/INFO201/a8-jsm209')
listings <- read.csv("./data/listings.csv")
setwd("~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization/scripts")
listings <- read.csv("./data/listings.csv")
listings <- read.csv("../data/listings.csv")
source("./scripts/build_hist.R")
shiny::runApp('~/Sophomore-Year-UW/INFO201/a8-jsm209')
runApp('~/Sophomore-Year-UW/INFO201/a8-jsm209')
listings <- read.csv("../data/listings.csv", stringsAsFactors = FALSE)
View(listings)
build_map <- function(df) {
interactive_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = df$longitude,
label = paste0(
listings$name,
"(Click for more information)"
),
popup = paste(
"Name:", df$name, "<br>",
"Neighbourhood:", df$neighbourhood, "<br>",
"Price: ", df$price, "<br>",
"Type:", df$room_type, "<br>",
"Minimum Nights:", df$minimum_nights
)
) %>%
return()
}
test <- build_map(listings)
library(dplyr)
library(ggplot2)
library(leaflet)
library(dplyr)
library(ggplot2)
library(leaflet)
listings <- read.csv("../data/listings.csv", stringsAsFactors = FALSE)
build_map <- function(df) {
interactive_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = df$longitude,
label = paste0(
listings$name,
"(Click for more information)"
),
popup = paste(
"Name:", df$name, "<br>",
"Neighbourhood:", df$neighbourhood, "<br>",
"Price: ", df$price, "<br>",
"Type:", df$room_type, "<br>",
"Minimum Nights:", df$minimum_nights
)
) %>%
return()
}
test <- build_map(listings)
library(dplyr)
library(ggplot2)
library(leaflet)
listings <- read.csv("../data/listings.csv", stringsAsFactors = FALSE)
build_map <- function(df) {
interactive_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = df$longitude,
lat = df$latitude,
label = paste0(
listings$name,
"(Click for more information)"
),
popup = paste(
"Name:", df$name, "<br>",
"Neighbourhood:", df$neighbourhood, "<br>",
"Price: ", df$price, "<br>",
"Type:", df$room_type, "<br>",
"Minimum Nights:", df$minimum_nights
)
) %>%
return()
}
test <- build_map(listings)
View(test)
setwd("~/")
source("./scripts/build_map.R")
source("../scripts/build_map.R")
listings <- read.csv("data/listings.csv", stringsAsFactors = FALSE)
setwd("~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization")
listings <- read.csv("data/listings.csv", stringsAsFactors = FALSE)
source("./scripts/build_map.R")
source("scripts/build_map.R")
source("scripts/build_map.R")
source("scripts/build_map.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
