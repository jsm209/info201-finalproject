source('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization/scripts/build_map.R')
df <- read.csv("listings.csv", stringsAsFactors = FALSE)
library(dplyr)
library(ggplot2)
library(leaflet)
library(leaflet.extras)
interactive_map <- leaflet() %>%
addTiles() %>%
addMarkers(
clusterOptions = markerClusterOptions(),
lng = df$longitude,
lat = df$latitude,
label = paste0(
df$name,
" ( Click for more information )"
),
popup = paste(
"Name:", df$name, "<br>",
"Neighbourhood:", df$neighbourhood, "<br>",
"Price: ", df$price, "<br>",
"Type:", df$room_type, "<br>",
"Minimum Nights:", df$minimum_nights
)
)
interactive_map
interactive_map <- leaflet() %>%
addProviderTiles(providers$Stamen.Toner)%>%
addHeatmap(lng=~df$longitude,
lat=~df$latitude,
blur = 24,
max = 0.05,
radius = 15)
interactive_map <- leaflet(df) %>%
addProviderTiles(providers$Stamen.Toner)%>%
addHeatmap(lng=~df$longitude,
lat=~df$latitude,
blur = 24,
max = 0.05,
radius = 15)
interactive_map
build_map <- function(df) {
interactive_map <- leaflet(df) %>%
addProviderTiles(providers$Stamen.Toner)%>%
addHeatmap(lng=~df$longitude,
lat=~df$latitude,
blur = 24,
max = 0.05,
radius = 15)%>%
return()
}
build_map(df)
working <- build_map(df)
working
source('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization/scripts/build_map.R')
source('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization/scripts/build_map.R')
setwd("C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization/scripts")
getwd()
library(dplyr)
library(ggplot2)
library(leaflet)
library(leaflet.extras)
# "build_map" will take in a dataframe
#  which is the InsideAirbnb "listings" dataset
#  It will return an interactive heatmap
#  of the locations that are most populated with Airbnb's
build_map <- function(df) {
interactive_map <- leaflet(df) %>%
addProviderTiles(providers$Stamen.Toner)%>%
addHeatmap(lng=~df$longitude,
lat=~df$latitude,
blur = 24,
max = 0.05,
radius = 15)%>%
return()
}
build_map(df)
working <- build_map(df)
working
shiny::runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
leaflet(df) %>%
addProviderTiles(providers$Stamen.Toner)%>%
setView(lng = 	-122.303200, lat = 	47.655548, zoom = 13) %>%
addCircleMarkers(lng=~longitude, lat=~latitude, popup = paste(
"Name:", df$name, "<br>",
"Neighbourhood:", df$neighbourhood, "<br>",
"Price: ", df$price, "<br>",
"Type:", df$room_type, "<br>",
"Minimum Nights:", df$minimum_nights
), radius = .5, color = 'red')
), radius = .5, color = 'red')
source('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization/scripts/build_map.R')
df_neighbourhood <- df%>%
select(neighbourhood_group,longitude,latitude)%>%
filter(neighbourhood_group == "Ballard")
View(df_neighbourhood)
build_map <- function(df) {
interactive_map <- leaflet(df) %>%
addProviderTiles(providers$Stamen.Toner)%>%
addHeatmap(lng=~df$longitude,
lat=~df$latitude,
blur = 24,
max = 0.05,
radius = 15)%>%
return()
}
build_map(df_neighbourhood)
working <- build_map(df_neighbourhood)
working
df_neighbourhood <- df%>%
select(neighbourhood_group,longitude,latitude)%>%
filter(neighbourhood_group == "Seattle")
working <- build_map(df_neighbourhood)
working
df_neighbourhood <- df%>%
select(neighbourhood_group,longitude,latitude)%>%
filter(neighbourhood_group == "neighbourhood_group")
df_neighbourhood <- df%>%
select(neighbourhood_group,longitude,latitude)%>%
filter(neighbourhood_group == "Ballard")
select_neighbourhood <- function(user_nb){
df_neighbourhood <- df%>%
select(neighbourhood_group,longitude,latitude)%>%
filter(neighbourhood_group == user_nb)%>%
return()
}
nb<- select_neighbourhood("Ballard")
nb
working <- build_map(nb)
working
wokring <- build_map(df)
wokring
source('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization/scripts/build_map.R')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
View(df)
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
build_map <- function(df,user_nb){
return <- df %>%
select(neighbourhood_group,longitude,latitude)%>%
filter(neighbourhood_group == user_nb)
interactive_map <- leaflet(df) %>%
addProviderTiles(providers$Stamen.Toner)%>%
addHeatmap(lng=~df$longitude,
lat=~df$latitude,
blur = 24,
max = 0.05,
radius = 15)%>%
return()
}
build_map(df,"Ballard")
working <- build_map(df,"Ballard")
working
build_map <- function(df,user_nb){
return <- df %>%
select(neighbourhood_group,longitude,latitude)%>%
filter(neighbourhood_group == user_nb)
interactive_map <- leaflet() %>%
addProviderTiles(providers$Stamen.Toner)%>%
addHeatmap(lng=~return$longitude,
lat=~return$latitude,
blur = 24,
max = 0.05,
radius = 15)%>%
return()
}
working <- build_map(df,"Ballard")
build_map <- function(df,user_nb){
df_neighbourhood <- df %>%
select(neighbourhood_group,longitude,latitude)%>%
filter(neighbourhood_group == user_nb)
interactive_map <- leaflet() %>%
addProviderTiles(providers$Stamen.Toner)%>%
addHeatmap(lng=~df_neighbourhood$longitude,
lat=~df_neighbourhood$latitude,
blur = 24,
max = 0.05,
radius = 15)%>%
return()
}
working <- build_map(df,"Ballard")
build_map <- function(df,user_nb){
df_neighbourhood <- df %>%
select(neighbourhood_group,longitude,latitude)%>%
filter(neighbourhood_group == user_nb)
interactive_map <- leaflet(df_neighbourhood) %>%
addProviderTiles(providers$Stamen.Toner)%>%
addHeatmap(lng=~df_neighbourhood$longitude,
lat=~df_neighbourhood$latitude,
blur = 24,
max = 0.05,
radius = 15)%>%
return()
}
working <- build_map(df,"Ballard")
working
working <- build_map(df,"West Seattle")
working
source('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization/scripts/build_map.R')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
seattle <- c("Ballard", "Beacon Hill", "Capitol Hill",
"Cascade","Central Area","Delridge",
"Downtown","Interbay","Lake City",
"Magnolia","Northgate","Other neighbourhoods",
"Queen Anne","Rainier Valley","Seward Park",
"University District","West Seattle")
working <- build_map(df,seattle)
source('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization/scripts/build_map.R')
working <- build_map(df,seattle)
working
working <- build_map(df,"Ballard")
working
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
source('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization/scripts/build_map.R')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
?selectInput
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
?checkboxInput()
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
checkboxGroupInput()
?checkboxGroupInput
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
runApp('C:/Users/Tasni/OneDrive/Desktop/INFO201/seattle-airbnbs-visualization')
library(leaflet.extras)
install.packages("leaflet.extras")
shiny::runApp('~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization')
library(lintr)
library(stringr)
setwd("~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization/scripts")
lint(build_treemap.r)
lint("build_treemap.r")
lint("build_treemap.r")
runApp('~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization')
runApp('~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization')
runApp('~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization')
runApp('~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization')
shiny::runApp()
?d3tree
?renderD3tree2
runApp()
runApp()
setwd("~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization/scripts")
neighbourhoods <- read.csv("../data/neighbourhoods.csv",
stringsAsFactors = FALSE)
runApp('~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization')
neighbourhoods <- read.csv("./data/neighbourhoods.csv",
stringsAsFactors = FALSE)
neighbourhoods <- read.csv("../data/neighbourhoods.csv",
stringsAsFactors = FALSE)
runApp('~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization')
runApp('~/Sophomore-Year-UW/INFO201/seattle-airbnbs-visualization')
neighbourhoods <- read.csv("data/neighbourhoods.csv",
stringsAsFactors = FALSE)
shiny::runApp()
runApp()
runApp()
library(htmlwidgets)
library(dplyr)
library(treemap)
library(htmlwidgets)
library(data.tree)
library(d3treeR)
shiny::runApp()
runApp()
runApp()
runApp()
library(readxl)
runApp()
listings <- read.csv("data/listings.csv", stringsAsFactors = FALSE)
d3tree(listings)
library(dplyr)
library(treemap)
library(htmlwidgets)
library(data.tree)
library(d3treeR)
# Note: This file uses packages not found on the CRAN, namely the "d3treeR"
# package. The source code can be found at the following link:
#
# https://github.com/d3treeR/d3treeR
#
# The installation instructions can be found here under
# "Quick Installation" via the following link:
#
# http://www.buildingwidgets.com/blog/2015/7/22/week-29-d3treer-v2
library(dplyr)
library(treemap)
library(htmlwidgets)
library(data.tree)
library(d3treeR)
# "build_treemap" takes in a dataframe, which is assumed to be the InsideAirbnb
# "listings" dataset, and a variable to plot, which can be the following:
# price, availability_365, number_of_reviews_ minimum_nights.
# Will construct an interactive treemap.
build_treemap <- function(listings, neighourhoods, variable) {
# Get relevant columns
filtered <- select(listings, neighbourhood, price, minimum_nights,
number_of_reviews, availability_365)
# Get averages and associate neighbourhood with its neighbourhood group
averages <- group_by(filtered, neighbourhood) %>%
summarise_all(funs(mean)) %>%
left_join(neighbourhoods)
# Assigns appropriate unit for description depending on question variable
unit <- ""
if (variable == "price") unit <- " dollars per night"
if (variable == "minimum_nights") unit <- " minimum nights to stay"
if (variable == "number_of_reviews") unit <- " reviews"
if (variable == "availability_365") unit <- " days of the year available"
# Gives every entry the appropriate label
averages$label <- paste0(averages$neighbourhood, " (",
round(averages[[variable]]), " ", unit, ")")
# Builds a regular treemap using the "treemap" library.
tm <- treemap(averages,
index = c("neighbourhood_group", "label"),
vSize = variable,
vColor = "neighbourhood_group",
type = "categorical",
palette = "Set2",
title = paste0("Average ", variable, " of airbnbs in Seattle."),
fontsize.title = 14,
algorithm = "squarified"
)
# Uses the previous treemap to build an interactive treemap.
# Uses the "d3treeR" library, not found in CRAN.
# Source of resources required for this function
# is found at the top of the file.
d3tree2(tm, rootname = paste0("Average ", variable,
" of airbnbs for different areas in Seattle."))
}
# Get relevant columns
filtered <- select(listings, neighbourhood, price, minimum_nights,
number_of_reviews, availability_365)
# Get averages and associate neighbourhood with its neighbourhood group
averages <- group_by(filtered, neighbourhood) %>%
summarise_all(funs(mean)) %>%
left_join(neighbourhoods)
d3tree(averages)
d3tree(treemap(averages))
shiny::runApp()
